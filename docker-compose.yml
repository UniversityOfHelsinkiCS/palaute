version: '3.5'

services:
  app:
    build:
      context: ./
      dockerfile: dev.Dockerfile
    image: palaute_dev
    volumes:
      - ./:/usr/src/app
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres?targetServerType=primary
      - REDIS_HOST=redis
      - JAMI_HOST=jami
      - JAMI_PORT=3003
      - JWT_KEY=minttujam
      - NODE_CONFIG_ENV=hy
      - UPDATER_URL=http://updater:3000
    ports:
      - 3000:3000
      - 9229:9229
    container_name: palaute_dev
  db:
    image: postgres:15.4
    environment:
      - PGDATA=/data
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - pg_data:/data
    container_name: palaute_db
  redis:
    image: redis:6.2.6
    command: redis-server
    container_name: palaute_redis
  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=db
      - ADMINER_DESIGN=dracula
    ports:
      - 8080:8080
  jami:
    image: quay.io/toska/jami:production
    environment:
      - PORT=3003
      - NODE_ENV=dev
      - DATABASE_URL=postgres://postgres:postgres@jami-db:5432/postgres
    ports:
      - 3003:3003
    container_name: jami
  jami-db:
    image: postgres:15.4
    environment:
      - PGDATA=/data
      - POSTGRES_PASSWORD=postgres
    container_name: jami-db
    ports:
      - 5433:5432
    volumes:
      - jami_data:/data
  # updater:
  #  build:
  #    context: ../norppa-updater
  #    dockerfile: ../norppa-updater/dev.Dockerfile
  #  image: updater-dev
  #  volumes:
  #    - ../norppa-updater:/usr/src/app
  #  environment:
  #    - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
  #    - REDIS_HOST=redis
  #  ports:
  #    - 8000:3000
  #  container_name: updater-dev

volumes:
  pg_data:
  jami_data:
